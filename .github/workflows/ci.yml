name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    name: Lint and Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type check and build
        run: npm run build
        env:
          NEXT_PUBLIC_BASE_URL: https://future-value-investment-calculator.vercel.app
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_SUPPRESS_GLOBAL_ERROR_HANDLER_FILE_WARNING: 1

  playwright-tests:
    runs-on: ubuntu-latest
    name: Playwright Tests
    needs: lint-and-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          SENTRY_DSN: https://placeholder@example.ingest.sentry.io/123
          NEXT_PUBLIC_SENTRY_DSN: https://placeholder@example.ingest.sentry.io/123
          SENTRY_ORG: test
          SENTRY_PROJECT: test
          SENTRY_AUTH_TOKEN: placeholder
          SENTRY_SUPPRESS_GLOBAL_ERROR_HANDLER_FILE_WARNING: 1

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  comment-preview-url:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Comment Preview URL
    needs: [lint-and-build, playwright-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const sha = context.payload.pull_request.head.sha;
            const branchName = context.payload.pull_request.head.ref;

            // Generate Vercel preview URL based on repository name and branch
            const sanitizedBranch = branchName.replace(/[^a-z0-9]/gi, '-').toLowerCase();
            const previewUrl = `https://future-value-investment-calculator-git-${sanitizedBranch}-dimoni4es-projects.vercel.app`;

            const body = `## ðŸš€ Preview Deployment Ready!

            Your preview deployment is ready for testing.

            **ðŸ”— Preview URL:** [${previewUrl}](${previewUrl})

            **ðŸ“Š Details:**
            - **Status:** âœ… Ready
            - **Commit:** \`${sha.substring(0, 7)}\`
            - **Branch:** \`${branchName}\`
            - **Build:** Passed all tests

            ---

            **ðŸ§ª Test the following features:**
            - [ ] Calculator functionality
            - [ ] Currency conversion
            - [ ] Export (CSV/PDF)
            - [ ] Share functionality
            - [ ] Responsive design
            - [ ] Internationalization (EN/ES/PL)

            *This preview will update automatically when you push new commits.*`;

            // Check if preview comment already exists
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const existingComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview Deployment Ready!')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body
              });
              console.log('Updated existing preview comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body
              });
              console.log('Created new preview comment');
            }
